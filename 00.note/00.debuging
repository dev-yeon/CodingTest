
처음 배운 문법들 내가 생각한 과정과 내 의도대로 동작하는지, 안 하는지 찾아내는 과정 
노드 js의 중단점 해제 설정 F9 

다음번 break point F5 
중단점 설정한 상태로 또 F5누르면 나머지 다 실행 (디버그 콘솔 창에 )

F10은 다음줄 실행 (한줄씩 실행 )
break point 걸렸을때 F11은 함수 내부 진입 

Node.js 디버깅 설정 및 사용 방법

	1.	중단점(Breakpoint) 설정
코드를 디버깅할 때 특정 줄에서 실행을 멈추고, 그 시점에서 변수의 값이나 프로그램의 상태를 확인하고 싶을 때 **중단점(breakpoint)**을 설정합니다.
설정 방법:
	•	Visual Studio Code와 같은 IDE에서는 디버깅하려는 코드 줄의 왼쪽 부분(줄 번호 옆)을 클릭하면 빨간 점이 생기면서 중단점이 설정됩니다.
	•	중단점을 설정한 후 프로그램을 실행하면, 그 중단점에 도달할 때 프로그램이 멈추고 디버깅이 가능합니다.
	2.	중단점 해제/설정 (F9)
	•	F9 키를 누르면 현재 선택한 줄에 중단점을 설정하거나 해제할 수 있습니다.
	•	중단점을 설정하면, 코드가 그 줄에 도달했을 때 실행이 멈추고, 해제하면 중단점이 사라집니다.
	3.	다음 중단점으로 이동 (F5)
	•	F5 키는 “디버깅 시작/계속” 기능입니다.
	•	처음 F5를 누르면 프로그램이 실행되며, 중단점이 설정된 곳까지 실행을 멈춥니다.
	•	중단점에서 프로그램이 멈춘 상태에서 다시 F5를 누르면, 다음 중단점까지 실행을 계속합니다. 중단점이 더 이상 없다면 프로그램이 끝까지 실행됩니다.
	4.	한 줄씩 실행 (F10)
	•	F10 키는 “한 줄씩 실행(Step Over)” 기능입니다.
	•	중단점에서 멈춘 상태에서 F10을 누르면 현재 줄의 코드를 실행하고, 그다음 줄로 이동합니다.
	•	이 기능은 함수 호출 시 그 함수 내부로 들어가지 않고, 함수 전체를 한 번에 실행하고 다음 줄로 이동하는 방식입니다.
	5.	함수 내부로 진입 (F11)
	•	F11 키는 “한 줄씩 내부 진입 실행(Step Into)” 기능입니다.
	•	F10과 달리 F11은 함수 호출 시 그 함수 내부로 진입해서, 그 함수의 내부 동작을 한 줄씩 실행할 수 있습니다. 이는 함수의 내부 로직을 확인하고 싶을 때 유용합니다.
	6.	함수 내부에서 빠져나오기 (Shift + F11)
	•	Shift + F11은 “함수에서 빠져나오기(Step Out)” 기능입니다.
	•	함수 내부로 들어가서 디버깅하다가, 함수의 실행을 더 이상 보고 싶지 않다면 Shift + F11을 눌러 그 함수를 빠져나올 수 있습니다. 이 경우, 함수의 나머지 코드는 한 번에 실행되고 함수 호출 이후의 코드로 이동합니다.
	7.	디버그 콘솔
	•	디버깅 중 디버그 콘솔(Debug Console) 창을 이용해 현재 상태의 변수를 직접 확인하거나, 새로운 JavaScript 코드를 실행해 볼 수 있습니다.
	•	이를 통해 변수 값이나 함수 결과를 실시간으로 확인하며, 문제를 추적할 수 있습니다.

디버깅 과정 요약

	•	중단점 설정/해제 (F9): 특정 위치에서 프로그램을 멈추고 싶을 때 사용.
	•	디버깅 시작/계속 (F5): 프로그램을 실행하거나, 중단점 이후로 계속 실행할 때 사용.
	•	한 줄씩 실행 (F10): 현재 줄을 실행하고 다음 줄로 이동.
	•	함수 내부 진입 (F11): 함수 내부로 들어가서 디버깅할 때 사용.
	•	함수에서 빠져나오기 (Shift + F11): 함수 디버깅을 마치고 빠져나올 때 사용.